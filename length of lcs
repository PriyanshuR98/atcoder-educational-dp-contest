#include <bits/stdc++.h>
using namespace std;

int dp[3000][3000];
// dp[i][j]-> at index i(0 to i) and index j in string t and it stores max length of subseq


int main()

{
    string s,t;
    cin>>s>>t;
    int n,m,ans;
    n=s.length();
    m=t.length();
    ans=0;
    dp[0][0]=1;
    if(s[0]==t[0])
    {
        dp[0][0]=1;
        
    }
    
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            // not pick
            if(i>0)
            {
                dp[i][j]=dp[i-1][j];
            }
            
            if(j>0)
            {
                dp[i][j]=max(dp[i][j],dp[i][j-1]);
            }


            //pick
            if(s[i]==t[j])
            {   ans=1;
                if(i>0 and j>0)
                {
                    ans=1+dp[i-1][j-1];
                }

                if(ans>dp[i][j])
                {
                    dp[i][j]=ans;
                }
            }
        }
    }

    cout<<dp[n-1][m-1]<<endl;
}
